[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2022-04-10T19:00:08.781Z",
        "before": [
          {
            "result": {
              "duration": 4667479,
              "status": "passed"
            },
            "match": {
              "location": "com.afd.mate.configurations.CucumberSpringContextConfiguration.setUp()"
            }
          }
        ],
        "line": 3,
        "name": "Get Stock Position and Market Value",
        "description": "",
        "id": "get-stock-position-and-marketvalue;get-stock-position-and-market-value",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 316135259,
              "status": "passed"
            },
            "line": 4,
            "name": "I have in database a fakeStockPosition",
            "match": {
              "location": "com.afd.mate.e2e.MyStepdefs.iHaveInDatabaseAFakeStockPosition()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2419137128,
              "status": "passed"
            },
            "line": 5,
            "name": "I want to retrieve by API my Stock Position and Market Value associated",
            "match": {
              "location": "com.afd.mate.e2e.MyStepdefs.iWantToRetrieveByAPIMyStockPositionAndMarketValueAssociated()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 116466518,
              "status": "passed"
            },
            "line": 6,
            "name": "Value retrieved are corresponding to the value of the fake stock position",
            "match": {
              "location": "com.afd.mate.e2e.MyStepdefs.valueRetrievedAreCorrespondingToTheValueOfTheFakeStockPosition()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 207512,
              "status": "passed"
            },
            "line": 7,
            "name": "Market value in the object is filled",
            "match": {
              "location": "com.afd.mate.e2e.MyStepdefs.marketValueInTheObjectIsFilled()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-10T19:00:11.741Z",
        "before": [
          {
            "result": {
              "duration": 1899178,
              "status": "passed"
            },
            "match": {
              "location": "com.afd.mate.configurations.CucumberSpringContextConfiguration.setUp()"
            }
          }
        ],
        "line": 9,
        "name": "Get Stock Position and Market Value With Generated API",
        "description": "",
        "id": "get-stock-position-and-marketvalue;get-stock-position-and-market-value-with-generated-api",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16023997,
              "status": "passed"
            },
            "line": 10,
            "name": "I have in database a fakeStockPosition",
            "match": {
              "location": "com.afd.mate.e2e.MyStepdefs.iHaveInDatabaseAFakeStockPosition()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 826240683,
              "status": "passed"
            },
            "line": 11,
            "name": "I want to retrieve by generated API my Stock Position and Market Value associated",
            "match": {
              "location": "com.afd.mate.e2e.MyStepdefs.iWantToRetrieveByGeneratedAPIMyStockPositionAndMarketValueAssociated()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "org.opentest4j.MultipleFailuresError: Multiple Failures (1 failure)\n\torg.opentest4j.AssertionFailedError: \nexpected: \"symbol\"\n but was: \"COST\"\n\tat org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:80)\n\tat org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:44)\n\tat org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:38)\n\tat org.junit.jupiter.api.Assertions.assertAll(Assertions.java:2911)\n\tat com.afd.mate.e2e.MyStepdefs.lambda$valueRetrievedInResponseBodyAreCorrespondingToTheValueOfTheFakeStockPosition$11(MyStepdefs.java:108)\n\tat org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultBodySpec.lambda$value$3(DefaultWebTestClient.java:576)\n\tat org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:231)\n\tat org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultBodySpec.value(DefaultWebTestClient.java:576)\n\tat com.afd.mate.e2e.MyStepdefs.valueRetrievedInResponseBodyAreCorrespondingToTheValueOfTheFakeStockPosition(MyStepdefs.java:108)\n\tat âœ½.Value retrieved in response body are corresponding to the value of the fake stock position(classpath:features/GetStockPositionAndMarketValueTest.feature:12)\n\tSuppressed: org.opentest4j.AssertionFailedError: \nexpected: \"symbol\"\n but was: \"COST\"\n\t\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\n\t\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\t\tat com.afd.mate.e2e.MyStepdefs.lambda$valueRetrievedInResponseBodyAreCorrespondingToTheValueOfTheFakeStockPosition$6(MyStepdefs.java:109)\n\t\tat org.junit.jupiter.api.AssertAll.lambda$assertAll$0(AssertAll.java:68)\n\t\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\t\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\t\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\t\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\t\tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\n\t\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\t\tat java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)\n\t\tat org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:77)\n\t\tat org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:44)\n\t\tat org.junit.jupiter.api.AssertAll.assertAll(AssertAll.java:38)\n\t\tat org.junit.jupiter.api.Assertions.assertAll(Assertions.java:2911)\n\t\tat com.afd.mate.e2e.MyStepdefs.lambda$valueRetrievedInResponseBodyAreCorrespondingToTheValueOfTheFakeStockPosition$11(MyStepdefs.java:108)\n\t\tat org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultBodySpec.lambda$value$3(DefaultWebTestClient.java:576)\n\t\tat org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:231)\n\t\tat org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultBodySpec.value(DefaultWebTestClient.java:576)\n\t\tat com.afd.mate.e2e.MyStepdefs.valueRetrievedInResponseBodyAreCorrespondingToTheValueOfTheFakeStockPosition(MyStepdefs.java:108)\n\t\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\t\tat java.base/java.lang.reflect.Method.invoke(Method.java:577)\n\t\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\n\t\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\n\t\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\n\t\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\n\t\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\n\t\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\n\t\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\n\t\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:92)\n\t\tat io.cucumber.core.runner.TestStep.run(TestStep.java:64)\n\t\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\n\t\tat io.cucumber.core.runner.TestCase.run(TestCase.java:104)\n\t\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:73)\n\t\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:151)\n\t\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:135)\n\t\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:27)\n\t\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\t\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\t\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\t\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\t\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\t\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\t\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\t\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:200)\n\t\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:90)\n\t\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\t\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\t\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\t\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\t\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\t\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:235)\n\t\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\t\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\t\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\t\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\t\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\n\t\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\n\t\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\n\t\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\n\t\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\n",
              "duration": 13728504,
              "status": "failed"
            },
            "line": 12,
            "name": "Value retrieved in response body are corresponding to the value of the fake stock position",
            "match": {
              "location": "com.afd.mate.e2e.MyStepdefs.valueRetrievedInResponseBodyAreCorrespondingToTheValueOfTheFakeStockPosition()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 54891,
              "status": "skipped"
            },
            "line": 13,
            "name": "Market value in the object in response body is filled",
            "match": {
              "location": "com.afd.mate.e2e.MyStepdefs.marketValueInTheObjectInResponseBodyIsFilled()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Get Stock Position and MarketValue",
    "description": "",
    "id": "get-stock-position-and-marketvalue",
    "keyword": "Feature",
    "uri": "classpath:features/GetStockPositionAndMarketValueTest.feature",
    "tags": []
  }
]